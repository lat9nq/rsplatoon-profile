{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Router.svelte","../../node_modules/svelte-routing/src/Route.svelte","../../node_modules/svelte-routing/src/actions.js","../../src/pages/Home.svelte","../../src/stores/metadataStore.js","../../src/pages/Profile.svelte","../../src/stores/profileStore.js","../../src/pages/Settings.svelte","../../src/stores/settingsStore.js","../../src/pages/Drip.svelte","../../src/stores/dripStore.js","../../node_modules/fuse.js/dist/fuse.esm.js","../../src/pages/Templates.svelte","../../src/stores/templateStore.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","import { navigate } from \"./history.js\";\nimport { shouldNavigate, hostMatches } from \"./utils.js\";\n\n/**\n * A link action that can be added to <a href=\"\"> tags rather\n * than using the <Link> component.\n *\n * Example:\n * ```html\n * <a href=\"/post/{postId}\" use:link>{post.title}</a>\n * ```\n */\nfunction link(node) {\n  function onClick(event) {\n    const anchor = event.currentTarget;\n\n    if (\n      anchor.target === \"\" &&\n      hostMatches(anchor) &&\n      shouldNavigate(event)\n    ) {\n      event.preventDefault();\n      navigate(anchor.pathname + anchor.search, { replace: anchor.hasAttribute(\"replace\") });\n    }\n  }\n\n  node.addEventListener(\"click\", onClick);\n\n  return {\n    destroy() {\n      node.removeEventListener(\"click\", onClick);\n    }\n  };\n}\n\n/**\n * An action to be added at a root element of your application to\n * capture all relative links and push them onto the history stack.\n *\n * Example:\n * ```html\n * <div use:links>\n *   <Router>\n *     <Route path=\"/\" component={Home} />\n *     <Route path=\"/p/:projectId/:docId?\" component={ProjectScreen} />\n *     {#each projects as project}\n *       <a href=\"/p/{project.id}\">{project.title}</a>\n *     {/each}\n *   </Router>\n * </div>\n * ```\n */\nfunction links(node) {\n  function findClosest(tagName, el) {\n    while (el && el.tagName !== tagName) {\n      el = el.parentNode;\n    }\n    return el;\n  }\n\n  function onClick(event) {\n    const anchor = findClosest(\"A\", event.target);\n\n    if (\n      anchor &&\n      anchor.target === \"\" &&\n      hostMatches(anchor) &&\n      shouldNavigate(event) &&\n      !anchor.hasAttribute(\"noroute\")\n    ) {\n      event.preventDefault();\n      navigate(anchor.pathname + anchor.search, { replace: anchor.hasAttribute(\"replace\") });\n    }\n  }\n\n  node.addEventListener(\"click\", onClick);\n\n  return {\n    destroy() {\n      node.removeEventListener(\"click\", onClick);\n    }\n  };\n}\n\nexport { link, links };\n","<script>\r\n    import { onMount, beforeUpdate } from 'svelte';\r\n    import { templateList } from '../stores/metadataStore';\r\n    import { navigate } from 'svelte-routing';\r\n\r\n    export let userdata = {};\r\n    export let location = \"\";\r\n    \r\n    let options = [],\r\n        copyInput,\r\n        selectedTemplate,\r\n        open = false;\r\n\r\n    onMount(async () => {\r\n        options = await templateList();\r\n\r\n        if (userdata && userdata.template && options && options.length > 0) {\r\n            let templateFound = options.filter(t => t.id === userdata.template);\r\n\r\n            if (templateFound.length === 1)\r\n                selectedTemplate = templateFound[0];\r\n            else \r\n                selectedTemplate = options.filter(t => t.id === \"s3-yellow-indigo\")[0];\r\n        } else {\r\n            selectedTemplate = options.filter(t => t.id === \"s3-yellow-indigo\")[0];\r\n        }\r\n\r\n        jQuery(\"#save-form\").on(\"submit\", function() {\r\n            jQuery(\"#submit\").html('<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>  Loading...');\r\n        });\r\n    });\r\n\r\n    function loadTemplatePicker() {\r\n        navigate(\"/templates\");\r\n    }\r\n\r\n    function cleanFriendCode(current = \"\") {\r\n        current = current.replace(/[^0-9]/g,'');\r\n\r\n        let final = \"\";\r\n\r\n        for (let i = 0; i < current.length; i++) {\r\n            if (i === 12)\r\n                break;\r\n\r\n            if (i === 4 || i === 8)\r\n                final += \"-\";\r\n\r\n            final += current[i];\r\n        }\r\n\r\n        return final;\r\n    }\r\n\r\n    beforeUpdate(() => {\r\n        userdata.friendCode = cleanFriendCode(userdata.friendCode);\r\n\r\n        if (userdata && userdata.template && options && options.length > 0) {\r\n            let templateFound = options.filter(t => t.id === userdata.template);\r\n\r\n            if (templateFound.length === 1)\r\n                selectedTemplate = templateFound[0];\r\n            else \r\n                selectedTemplate = options.filter(t => t.id === \"s3-yellow-indigo\")[0];\r\n        } else {\r\n            selectedTemplate = options.filter(t => t.id === \"s3-yellow-indigo\")[0];\r\n        }\r\n    });\r\n    \r\n    function copyToClipboard() {\r\n        console.log(\"going\");\r\n        copyInput.focus();\r\n        copyInput.select();\r\n        document.execCommand(\"copy\");\r\n    }\r\n</script>\r\n\r\n<div>\r\n{#if userdata.id}\r\n    <div class=\"container\">\r\n        <div class=\"row\" style=\"margin-bottom: 14px;\">\r\n            <div class=\"col\">\r\n                {#if userdata.profileId}\r\n                    <form>\r\n                        <label for=\"copy-input\">Your Profile Link</label>\r\n                        <div class=\"input-group\" on:click={copyToClipboard}>\r\n                                <input type=\"text\" class=\"form-control\"\r\n                                    value=\"{userdata.baseUrl}/p/{userdata.profileId}?_v={new Date().valueOf()}\" id=\"copy-input\" bind:this={copyInput} readonly>\r\n                                <span class=\"input-group-btn\">\r\n                                <button class=\"btn btn-default\" type=\"button\" id=\"copy-button\"\r\n                                    data-toggle=\"tooltip\" data-placement=\"button\"\r\n                                    title=\"Copy to Clipboard\">\r\n                                        <i class=\"fa fa-copy\"></i>\r\n                                </button>\r\n                                </span>\r\n                        </div>\r\n                    </form>\r\n                {/if}\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-md-6\">\r\n                {#if userdata.drip}\r\n                    <div>\r\n                        <h3>Your drip</h3>\r\n                        <a class=\"btn btn-primary edit-drip\" href=\"/drip\" role=\"button\">Edit</a>\r\n                    </div>\r\n                    <img src={userdata.drip} class=\"drip-pic\" alt=\"drip\" />\r\n                {:else}\r\n                    <div>\r\n                        <h3>No drip</h3>\r\n                        <a class=\"btn btn-primary edit-drip\" href=\"/drip\" role=\"button\">Edit</a>\r\n                    </div>\r\n                    <img src=\"/css/img/nodrip.png\" class=\"drip-pic\" alt=\"drip\" />\r\n                {/if}\r\n            </div>\r\n            <div class=\"col-12 col-md-6\">\r\n                <form action=\"/api/save\" method=\"post\" id=\"save-form\">\r\n                    <div class=\"form-group\">\r\n                        <h3 for=\"name\">Username</h3>\r\n                        <input type=\"text\" class=\"form-control\" name=\"name\" bind:value={userdata.name} id=\"name\" placeholder=\"In game name\" maxlength=\"10\" />\r\n                        \r\n                        <h3 for=\"friendcode\">Friend Code</h3>\r\n                        <input type=\"text\" class=\"form-control\" name=\"friendcode\" bind:value={userdata.friendCode} id=\"friendcode\" placeholder=\"0000-0000-0000\" />\r\n                        \r\n                        <div class=\"\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col\">\r\n                                    <h3 for=\"template\">Card Template</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <button type=\"button\" on:click={loadTemplatePicker} style=\"width:100%\" class=\"btn btn-primary\">{selectedTemplate ? selectedTemplate.name : \"Splatoon 3 Blue on Yellow\"}</button>\r\n                                    <input type=\"hidden\" value={selectedTemplate ? selectedTemplate.id : \"s3-yellow-indigo\"} name=\"template\" />\r\n                                    {#if selectedTemplate}\r\n                                    <img src={selectedTemplate.url} style=\"width:100%;\" id=\"templateimage\" alt=\"template\"/>\r\n                                    {/if}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n{:else}\r\n    <div class=\"nameentry needtologin\">\r\n        <a id=\"loginDiscord\" href={userdata.loginUrl}>\r\n            <button class=\"btn btn-primary\" type=\"button\">Discord Login</button>\r\n        </a>\r\n    </div>\r\n{/if}\r\n</div>","export const userData = async () => (await fetch(\"/api/user\")).json();\r\nexport const templateList = async () => (await fetch(\"/api/templates/all\")).json();","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    import { getProfile } from '../stores/profileStore';\r\n\r\n    export let profileId = \"\";\r\n    export let location = \"\";\r\n\r\n    let profile = {};\r\n\r\n    onMount(async () => {\r\n        profile = await getProfile(profileId);\r\n    })\r\n\r\n    let copyInput;\r\n\r\n    function copyToClipboard() {\r\n        console.log(\"going\");\r\n        copyInput.focus();\r\n        copyInput.select();\r\n        document.execCommand(\"copy\");\r\n    }\r\n</script>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\" style=\"margin-bottom: 14px;\">\r\n        <div class=\"col\">\r\n            <h3>{profile.name ? profile.name : 'User'}'s Profile</h3>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin-bottom: 14px;\">\r\n        <div class=\"col-12 col-md-6\">\r\n            {#if profile.drip}\r\n                <div>\r\n                    <h3>Their drip</h3>\r\n                </div>\r\n                <img src={profile.drip} class=\"drip-pic\" alt=\"drip\" />\r\n            {:else}\r\n                <div>\r\n                    <h3>No drip</h3>\r\n                </div>\r\n                <img src=\"/css/img/nodrip.png\" class=\"drip-pic\" alt=\"no drip\" />\r\n            {/if}\r\n        </div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <form>\r\n                <h3 for=\"copy-input\">Friend Code</h3>\r\n                <div class=\"input-group\" on:click={copyToClipboard}>\r\n                      <input type=\"text\" class=\"form-control\"\r\n                          value={profile.friendCode} id=\"copy-input\" bind:this={copyInput} readonly>\r\n                      <span class=\"input-group-btn\">\r\n                        <button class=\"btn btn-default\" type=\"button\" id=\"copy-button\"\r\n                            data-toggle=\"tooltip\" data-placement=\"button\"\r\n                            title=\"Copy to Clipboard\">\r\n                              <i class=\"fa fa-copy\"></i>\r\n                        </button>\r\n                      </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","export const getProfile = async (id) => (await fetch(`/api/profile/${id}`)).json();\r\n\r\n","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    import { getSettings, saveBotKeyConfig, resetKeyConfig, revokeKeyConfig } from '../stores/settingsStore';\r\n\r\n    export let userdata = {};\r\n    export let location = \"\";\r\n\r\n    let settings = {},\r\n        copyInput;\r\n\r\n    onMount(async () => {\r\n        settings = await getSettings();\r\n    });\r\n\r\n    function copyToClipboard() {\r\n        console.log(\"going\");\r\n        copyInput.focus();\r\n        copyInput.select();\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    async function saveRow(id) {\r\n        const botConfig = settings.allbots.filter(t => t.userId === id)[0];\r\n        await saveBotKeyConfig(botConfig);\r\n        window.location.href = window.location.href;\r\n    }\r\n\r\n    async function resetKey(id) {\r\n        await resetKeyConfig(id);\r\n        window.location.href = window.location.href;\r\n    }\r\n\r\n    async function revokeKey(id) {\r\n        await revokeKeyConfig(id);\r\n        window.location.href = window.location.href;\r\n    }\r\n</script>\r\n\r\n<div class=\"container\">\r\n    {#if settings.isAdmin}\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <form action=\"/api/settings/grantkey\" method=\"post\" id=\"save-form\">\r\n                    <div class=\"form-group\">\r\n                        <div>\r\n                            <h3 for=\"name\">Grant bot key to another user</h3>\r\n                            <input type=\"text\" class=\"form-control\" name=\"name\" value=\"\" id=\"name\" placeholder=\"User ID\" />\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"getProfile\" name=\"permissions\" style=\"width:auto\">\r\n                            <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                Get Profile\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"saveFriendCode\" name=\"permissions\" style=\"width:auto\">\r\n                            <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                Save Friend Code\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"saveUsername\" name=\"permissions\" style=\"width:auto\">\r\n                            <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                Save Username\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"saveDrip\" name=\"permissions\" style=\"width:auto\">\r\n                            <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                Save Drip\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value=\"deleteProfile\" name=\"permissions\" style=\"width:auto\">\r\n                            <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                                Delete Profile\r\n                            </label>\r\n                        </div>\r\n                        <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div class=\"row no-gutters\" style=\"margin-top:14px;\">\r\n            <div class=\"col\">\r\n                <div class=\"container\" style=\"padding:0\">\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"col\">\r\n                            <table class=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">User</th>\r\n                                        <th scope=\"col\">Get Profile</th>\r\n                                        <th scope=\"col\">Save FC</th>\r\n                                        <th scope=\"col\">Save Name</th>\r\n                                        <th scope=\"col\">Save Drip</th>\r\n                                        <th scope=\"col\">Delete Profile</th>\r\n                                        <th scope=\"col\">Team Query</th>\r\n                                        <th scope=\"col\">Team Webhook</th>\r\n                                        <th scope=\"col\">Revoked</th>\r\n                                        <th scope=\"col\">Update</th>\r\n                                        <th scope=\"col\">Reset</th>\r\n                                        <th scope=\"col\">Revoke</th>\r\n                                      </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {#if settings.allbots && settings.allbots.length}\r\n                                    {#each settings.allbots as bot}\r\n                                    <tr>\r\n                                        <th scope=\"row\">\r\n                                            {bot.userId}\r\n                                            <input type=\"hidden\" name=\"name\" value={bot.userId} />\r\n                                        </th>\r\n                                        <td>\r\n                                            <div class=\"form-check\">\r\n                                                <input type=\"hidden\" name=\"getProfile\" value=\"0\" />\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"1\" name=\"getProfile\" style=\"width:auto\" bind:checked={bot.getProfile}>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class=\"form-check\">\r\n                                                <input type=\"hidden\" name=\"saveFriendCode\" value=\"0\" />\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"1\" name=\"saveFriendCode\" style=\"width:auto\" bind:checked={bot.saveFriendCode}>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class=\"form-check\">\r\n                                                <input type=\"hidden\" name=\"saveUsername\" value=\"0\" />\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"1\" name=\"saveUsername\" style=\"width:auto\" bind:checked={bot.saveUsername}>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class=\"form-check\">\r\n                                                <input type=\"hidden\" name=\"saveDrip\" value=\"0\" />\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"1\" name=\"saveDrip\" style=\"width:auto\" bind:checked={bot.saveDrip}>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class=\"form-check\">\r\n                                                <input type=\"hidden\" name=\"deleteProfile\" value=\"0\" />\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"1\" name=\"deleteProfile\" style=\"width:auto\" bind:checked={bot.deleteProfile}>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class=\"form-check\">\r\n                                                <input type=\"hidden\" name=\"teamQuery\" value=\"0\" />\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"1\" name=\"teamQuery\" style=\"width:auto\" bind:checked={bot.teamQuery}>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class=\"form-check\">\r\n                                                <input type=\"hidden\" name=\"teamWebhook\" value=\"0\" />\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"1\" name=\"teamWebhook\" style=\"width:auto\" bind:checked={bot.teamWebhook}>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            {bot.nobot}\r\n                                        </td>\r\n                                        <td>\r\n                                            <button class=\"btn btn-primary\" type=\"button\" on:click={async () => await saveRow(bot.userId)}><i class=\"fa fa-cloud-upload\"></i></button>\r\n                                        </td>\r\n                                        <td class=\"text-center\">\r\n                                            <button class=\"btn btn-primary\" type=\"button\" on:click={async () => await resetKey(bot.userId)}><i class=\"fa fa-refresh\"></i></button>\r\n                                        </td>\r\n                                        <td class=\"text-center\">\r\n                                            <button class=\"btn btn-primary\" type=\"button\" on:click={async () => await revokeKey(bot.userId)}><i class=\"fa fa-times\"></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                    {/each}\r\n                                    {/if} \r\n                                </tbody>\r\n                              </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    {/if}\r\n    {#if settings.botKey}\r\n        <div class=\"row\" style=\"margin-top:14px;\">\r\n            <div class=\"col-11\">\r\n                <form>\r\n                    <label for=\"copy-input\">Your Bot Key</label>\r\n                    <div class=\"input-group\" onclick=\"copyToClipboard()\">\r\n                          <input type=\"text\" class=\"form-control\"\r\n                              value={settings.botKey} id=\"copy-input\" bind:this={copyInput} readonly>\r\n                          <span class=\"input-group-btn\">\r\n                            <button class=\"btn btn-default\" type=\"button\" id=\"copy-button\"\r\n                                data-toggle=\"tooltip\" data-placement=\"button\"\r\n                                title=\"Copy to Clipboard\">\r\n                                  <i class=\"fa fa-copy\"></i>\r\n                            </button>\r\n                          </span>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"col-1\">\r\n                <form action=\"/settings/resetkey\" method=\"post\">\r\n                    <button class=\"btn btn-primary\" type=\"submit\" style=\"bottom:4px;position:absolute;\"><i class=\"fa fa-refresh\"></i></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        {#if settings.teamWebhookAllowed}\r\n            <form action=\"/api/settings/saveteamwebhook\" method=\"post\" id=\"save-form\">\r\n                <div class=\"row\" style=\"margin-top:14px;\">\r\n                        <div class=\"col\">\r\n                            <label for=\"copy-input\">Team Webhook</label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"webhook\" value={settings.teamWebhookUrl} id=\"webhook\" placeholder=\"Your webhook URL\" />\r\n                        </div>\r\n                </div>\r\n                <div class=\"row\" style=\"margin-top:14px;\">\r\n                    <div class=\"col\">\r\n                        <button class=\"btn btn-primary\" type=\"submit\" style=\"float:right;\">Save Webhook</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        {/if}\r\n    {/if}\r\n</div>","export const getSettings = async () => (await fetch(\"/api/settings\")).json();\r\n\r\nexport const saveBotKeyConfig = async (bot) => {\r\n    await fetch(\"/api/settings/updatekey\", {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(bot)\r\n    });\r\n}\r\n\r\nexport const resetKeyConfig = async (id) => {\r\n    await fetch(\"/api/settings/resetkey\", {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            userId: id\r\n        })\r\n    });\r\n}\r\n\r\nexport const revokeKeyConfig = async (id) => {\r\n    await fetch(\"/api/settings/revokekey\", {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            userId: id\r\n        })\r\n    });\r\n}","<script>\r\n    // TODO: convert this into a more API format\r\n    import { onMount } from 'svelte';\r\n\r\n    import { getDrip } from '../stores/dripStore';\r\n\r\n    export let userdata = {};\r\n    export let location = \"\";\r\n\r\n    let dripdata = {};\r\n\r\n    onMount(async () => {\r\n        dripdata = await getDrip();\r\n    });\r\n\r\n    function loadFile(e) {\r\n        if (e.target.files) {\r\n            jQuery(\"#original-drip\").hide();\r\n            jQuery(\"#new-drip\").show();\r\n            jQuery(\"#upload-new-image\").show();\r\n\r\n            let imageFile = e.target.files[0];\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                var img = document.createElement(\"img\");\r\n                img.onload = function (event) {\r\n                    var MAX_WIDTH = 512;\r\n                    var MAX_HEIGHT = 512;\r\n\r\n                    var width = img.width;\r\n                    var height = img.height;\r\n\r\n                    // Change the resizing logic\r\n                    if (width > height) {\r\n                        if (width > MAX_WIDTH) {\r\n                            height = height * (MAX_WIDTH / width);\r\n                            width = MAX_WIDTH;\r\n                        }\r\n                    } else {\r\n                        if (height > MAX_HEIGHT) {\r\n                            width = width * (MAX_HEIGHT / height);\r\n                            height = MAX_HEIGHT;\r\n                        }\r\n                    }\r\n\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    var ctx = canvas.getContext(\"2d\");\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n\r\n                    // Show resized image in preview element\r\n                    var dataurl = canvas.toDataURL(imageFile.type);\r\n                    document.getElementById(\"preview\").src = dataurl;\r\n                }\r\n                img.src = e.target.result;\r\n            }\r\n            reader.readAsDataURL(imageFile);\r\n        }\r\n    }\r\n\r\n    async function uploadNewImage() {\r\n        var resizedImage = dataURLToBlob(document.getElementById(\"preview\").src);\r\n        var data = new FormData();\r\n        data.append('drip', resizedImage);\r\n\r\n        jQuery(\"#upload-new-image\").html('<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>  Loading...');\r\n\r\n        jQuery.ajax({\r\n            url: \"/api/drip/save\",\r\n            data: data,\r\n            cache: false,\r\n            contentType: false,\r\n            processData: false,\r\n            type: 'POST',\r\n            success: function() {\r\n                window.location.reload();\r\n            },\r\n            error: function() {\r\n                alert(\"Upload failed\");\r\n                window.location.reload();\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Utility function to convert a canvas to a BLOB */\r\n    function dataURLToBlob(dataURL) {\r\n        var BASE64_MARKER = ';base64,';\r\n        if (dataURL.indexOf(BASE64_MARKER) == -1) {\r\n            var parts = dataURL.split(',');\r\n            var contentType = parts[0].split(':')[1];\r\n            var raw = parts[1];\r\n\r\n            return new Blob([raw], {type: contentType});\r\n        }\r\n\r\n        var parts = dataURL.split(BASE64_MARKER);\r\n        var contentType = parts[0].split(':')[1];\r\n        var raw = window.atob(parts[1]);\r\n        var rawLength = raw.length;\r\n\r\n        var uInt8Array = new Uint8Array(rawLength);\r\n\r\n        for (var i = 0; i < rawLength; ++i) {\r\n            uInt8Array[i] = raw.charCodeAt(i);\r\n        }\r\n\r\n        return new Blob([uInt8Array], {type: contentType});\r\n    }\r\n</script>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-md-6 offset-md-3\" id=\"original-drip\">\r\n            {#if dripdata.drip}\r\n                <div>\r\n                    <h3>\r\n                        <a href=\"/\"><i class=\"fa fa-chevron-left\"></i></a>\r\n                        Your drip\r\n                    </h3>\r\n                </div>\r\n                <div class=\"drip-img\">\r\n                    <img src={dripdata.drip} class=\"drip-pic\" alt=\"drip\" />\r\n                    <form action=\"/api/drip/delete\" method=\"post\" class=\"delete-drip\">\r\n                        <button type=\"submit\" value=\"submit\">\r\n                            <i class=\"fa fa-close\"></i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            {:else}\r\n                <div class=\"drip-img\">\r\n                    <img src=\"/css/img/nodrip.png\" class=\"drip-pic\" alt=\"no drip\" />\r\n                </div>\r\n            {/if}\r\n        </div>\r\n        <div class=\"col-12 col-md-6 offset-md-3\" id=\"new-drip\" style=\"display:none;\">\r\n            <div>\r\n                <h3>\r\n                    <a href=\"/\"><i class=\"fa fa-chevron-left\"></i></a>\r\n                    New drip\r\n                </h3>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"upload-new-image\" style=\"display: none;position:absolute;top:5px;right:15px;\" on:click={uploadNewImage}>Save Changes</button>\r\n            </div>\r\n            <div class=\"drip-img\">\r\n                <img id=\"preview\" class=\"drip-pic\" alt=\"drip\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-md-6 offset-md-3\">\r\n            {#if dripdata.blockupload}\r\n                <h2>Upload limit reached</h2>\r\n                <div>Each user is allowed 3 uploads per week. The limit has been reached.</div>\r\n            {:else}\r\n                <input id=\"image-input\" name=\"drip\" type=\"file\" class=\"btn btn-primary\" accept=\".jpg,.png,image/jpeg,image/png\" style=\"width:100%\" on:change={loadFile} />\r\n            {/if}\r\n        </div>\r\n    </div>\r\n</div>","export const getDrip = async () => (await fetch(\"/api/drip\")).json();\r\n// TODO: move other form post methods here","/**\n * Fuse.js v6.5.3 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2021 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n  }\n\n  return { path, id, weight, src }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      // console.log(key)\n      let value = this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (!isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.5.3';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n","<script>\r\n    import { onMount } from 'svelte';\r\n    import { navigate } from 'svelte-routing';\r\n    import { searchTemplates, deleteTemplate } from '../stores/templateStore';\r\n    import Fuse from 'fuse.js'\r\n\r\n    export let userdata = {};\r\n    export let setTemplate = (template) => {};\r\n    let templates = null;\r\n    let justMyTemplates = false;\r\n    let filteredTemplates = null;\r\n    let fuse;\r\n    let search = '';\r\n    let unusedSlot = 0;\r\n\r\n    onMount(async () => {\r\n        templates = await searchTemplates();\r\n        templates = templates.sort((t1, t2) => {\r\n            if (t1.userId === userdata.id && t2.userId === userdata.id)\r\n                return 0;\r\n\r\n            if (t1.userId !== userdata.id && t2.userId !== userdata.id)\r\n                return 0;\r\n\r\n            if (t1.userId === userdata.id)\r\n                return -1;\r\n            \r\n            return 1;\r\n        })\r\n        filteredTemplates = templates;\r\n\r\n        const options = {\r\n            shouldSort: true,\r\n            threshold: 0.4,\r\n            keys: [\r\n                \"name\",\r\n                \"keywords\"\r\n            ]\r\n        };\r\n\r\n        fuse = new Fuse(templates, options);\r\n\r\n        let sorted = templates.filter(t => t.userId === userdata.id).sort((t1, t2) => parseInt(t1.slot) > parseInt(t2.slot) ? 1 : -1);\r\n\r\n        sorted.forEach(t => unusedSlot === parseInt(t.slot) && unusedSlot++);\r\n    });\r\n\r\n    function filterTemplates() {\r\n        if (search)\r\n            filteredTemplates = fuse.search(search).map(v => v.item);\r\n        else\r\n            filteredTemplates = templates;\r\n    }\r\n\r\n    function clickTemplate(id) {\r\n        setTemplate(id);\r\n        navigate(\"/\");\r\n    }\r\n\r\n    async function confirmDelete(name, slot) {\r\n        const result = confirm(`Are you sure you wish to delete the template ${name}?  This action cannot be undone.`);\r\n\r\n        if (result) {\r\n            await deleteTemplate(slot);\r\n\r\n            window.location.reload();\r\n        }\r\n    }\r\n</script>\r\n\r\n{#if userdata}\r\n<div class=\"container\">\r\n    {#if templates && templates.filter(t => t.userId === userdata.id).length < 10}\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <h3>Create a template</h3>\r\n            <form action=\"/api/templates/save\" method=\"post\" enctype='multipart/form-data'>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-4\">\r\n                        <label for=\"name\">Name</label>\r\n                        <input type=\"text\" class=\"form-control\" name=\"name\" maxlength=\"20\" />\r\n                    </div>\r\n                    <div class=\"col-12 col-md-8\">\r\n                        <label for=\"name\">Search Terms</label>\r\n                        <input type=\"text\" class=\"form-control\" name=\"searchTerms\" maxlength=\"70\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <label for=\"name\">Friend Code Color</label>\r\n                        <input type=\"color\" class=\"form-control\" name=\"friendcodecolor\" />\r\n                    </div>\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <label for=\"name\">Name Color</label>\r\n                        <input type=\"color\" class=\"form-control\" name=\"namecolor\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <label for=\"img\">Template</label>\r\n                        <div>\r\n                            <input type=\"file\" name=\"img\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-md-6\" style=\"position:relative;\">\r\n                        <div class=\"save-new\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <input type=\"hidden\" name=\"slot\" value={unusedSlot} />\r\n            </form>\r\n        </div>\r\n    </div>\r\n    {/if}\r\n    <div class=\"row\" style=\"margin-top: 14px;\">\r\n        <div class=\"col\">\r\n            <h3>Pick a Template</h3>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col\">\r\n                    <label class=\"checkbox-container\">Just my templates \r\n                        <input type=\"checkbox\" bind:checked={justMyTemplates} />\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col\">\r\n                    <label for=\"search\">Search</label>\r\n                    <input type=\"text\" class=\"form-control\" bind:value={search} on:input={filterTemplates} />\r\n                </div>\r\n            </div>\r\n            <div class=\"row no-gutters\">\r\n                {#if templates}\r\n                {#each filteredTemplates.filter(t => justMyTemplates ? t.userId === userdata.id : true) as template}\r\n                <div class=\"col-12 col-md-4\" style=\"position:relative;\">\r\n                    <div class=\"floating-card mdc-elevation--z20\">\r\n                        <div class=\"row no-gutters\">\r\n                            <div class=\"col-12 no-gutters\">\r\n                                <h5>{template.name}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"btn btn-primary\" class=\"template-choice\" on:click={() => clickTemplate(template.id)}>\r\n                            <img src={template.url} alt=\"template\" style=\"width:100%;\" />\r\n                            <div class=\"row\">\r\n                                <div style=\"text-align:left\" class=\"col\">\r\n                                    <input class=\"color-display\" type=\"color\" readonly value={template.color_friendcode} />\r\n                                    Friend Code\r\n                                </div>\r\n                                <div style=\"text-align:left\" class=\"col\">\r\n                                    <input class=\"color-display\" type=\"color\" readonly value={template.color_name} />\r\n                                    Name\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"search-terms\">\r\n                                {#each template.keywords.split(' ') as keyword}\r\n                                {#if keyword}\r\n                                <div class=\"term\">{keyword}</div>\r\n                                {/if}\r\n                                {/each}\r\n                            </div>\r\n                        </button>\r\n                        {#if template.userId === userdata.id}\r\n                        <div class=\"row\">\r\n                            <div class=\"col\" style=\"position:relative;margin:12px;\">\r\n                                <button type=\"button\" class=\"btn btn-danger\" style=\"width:100%;\" on:click={async () => await confirmDelete(template.name, template.slot)}>Delete</button> \r\n                            </div>\r\n                        </div>\r\n                        {/if}\r\n                    </div>\r\n                </div>\r\n                {/each}\r\n                {:else}\r\n                <div class=\"col\">\r\n                    You don't have any templates\r\n                </div>\r\n                {/if}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n{/if}\r\n\r\n<style>\r\n    .save-new {\r\n        position:absolute;\r\n        bottom:0;\r\n        right:14px;\r\n    }\r\n\r\n    .search-terms {\r\n        width: 100%;\r\n    }\r\n\r\n    .term {\r\n        background-color: #ccc;\r\n        padding: 2px 4px;\r\n        border-radius: 6px;\r\n        display: inline-block;\r\n        margin: 2px;\r\n    }\r\n\r\n    /* Customize the label (the container) */\r\n    .checkbox-container {\r\n        display: block;\r\n        position: relative;\r\n        padding-left: 35px;\r\n        margin-bottom: 12px;\r\n        cursor: pointer;\r\n        font-size: 22px;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n    }\r\n\r\n    /* Hide the browser's default checkbox */\r\n    .checkbox-container input {\r\n        position: absolute;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        height: 0;\r\n        width: 0;\r\n    }\r\n\r\n    /* Create a custom checkbox */\r\n    .checkmark {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: 25px;\r\n        width: 25px;\r\n        background-color: #eee;\r\n    }\r\n\r\n    /* On mouse-over, add a grey background color */\r\n    .checkbox-container:hover input ~ .checkmark {\r\n        background-color: #ccc;\r\n    }\r\n\r\n    /* When the checkbox is checked, add a blue background */\r\n    .checkbox-container input:checked ~ .checkmark {\r\n        background-color: #cb0856;\r\n    }\r\n\r\n    /* Create the checkmark/indicator (hidden when not checked) */\r\n    .checkmark:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        display: none;\r\n    }\r\n\r\n    /* Show the checkmark when checked */\r\n    .checkbox-container input:checked ~ .checkmark:after {\r\n        display: block;\r\n    }\r\n\r\n    /* Style the checkmark/indicator */\r\n    .checkbox-container .checkmark:after {\r\n        left: 9px;\r\n        top: 5px;\r\n        width: 5px;\r\n        height: 10px;\r\n        border: solid white;\r\n        border-width: 0 3px 3px 0;\r\n        -webkit-transform: rotate(45deg);\r\n        -ms-transform: rotate(45deg);\r\n        transform: rotate(45deg);\r\n    }\r\n\r\n    .template-choice {\r\n        border: none;\r\n        background-color: white;\r\n    }\r\n\r\n    .color-display {\r\n        border: none;\r\n        background-color: transparent;\r\n    }\r\n\r\n    .floating-card {\r\n        margin: 6px 8px;\r\n        background-color: white;\r\n        padding: 6px 8px;\r\n        border-radius: 20px;\r\n    }\r\n</style>","let myTemplates = null;\r\n\r\nexport const getMyTemplates = async () => {\r\n    if (!myTemplates) {\r\n        myTemplates = (await fetch(\"/api/templates\")).json();\r\n    }\r\n\r\n    return myTemplates;\r\n};\r\n\r\nexport const searchTemplates = async (searchTerm) => {\r\n    let url = new URL(window.location.origin + \"/api/templates/all\");\r\n\r\n    url.search = new URLSearchParams({ q: searchTerm });\r\n\r\n    return (await fetch(url)).json();\r\n};\r\n\r\nexport const deleteTemplate = async (slot) => {\r\n    await fetch(\"/api/templates/delete\", {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ slot })\r\n    });\r\n};","<script>\r\n    import { onMount } from 'svelte';\r\n    import { Router, Route, link } from 'svelte-routing';\r\n    import { userData } from './stores/metadataStore';\r\n\r\n    import Home from './pages/Home.svelte';\r\n    import Profile from './pages/Profile.svelte';\r\n    import Settings from './pages/Settings.svelte';\r\n    import Drip from './pages/Drip.svelte';\r\n\timport Templates from './pages/Templates.svelte';\r\n\r\n    export let url = '';\r\n    \r\n    let userdata = {};\r\n\r\n    onMount(async () => userdata = await userData());\r\n    const toggleusermenu = () => jQuery(\".usermenu\").slideToggle();\r\n\r\n\tconst setTemplate = (id) => {\r\n\t\tuserdata.template = id;\r\n\t}\r\n</script>\r\n\r\n<main>\r\n\t<div class=\"container\" style=\"margin-bottom:100px;padding-left:0;padding-right:0;\">\r\n\t\t<div class=\"jumbotron\">\r\n\t\t\t<div>\r\n\t\t\t\t<a href=\"https://discord.gg/rsplatoon\" target=\"_blank\">\r\n\t\t\t\t\t<img class=\"center-block\" src=\"/css/img/logo.png\" style=\"width:300px;height:auto;margin-top:0\" alt=\"logo\" />\r\n\t\t\t\t</a>\r\n\t\t\t\t<h1>Profile</h1>\r\n\t\t\t</div>\r\n            {#if userdata.id}\r\n\t\t\t\t<div id=\"userinfo\">\r\n\t\t\t\t\t<div class=\"usermenu\" style=\"display: none;\">\r\n\t\t\t\t\t\t<div style=\"height:70px;width:1px;\"></div>\r\n\t\t\t\t\t\t<div class=\"item\">\r\n\t\t\t\t\t\t\t<a href=\"/settings\">\r\n\t\t\t\t\t\t\t\tSettings\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"item\">\r\n\t\t\t\t\t\t\t<form action=\"/api/delete\" method=\"post\">\r\n\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"delete\" value=\"YES\" />\r\n\t\t\t\t\t\t\t\t<a href=\"/\" onclick=\"$(this).closest('form').submit();return false;\">\r\n\t\t\t\t\t\t\t\t\tDelete Profile\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"item\">\r\n\t\t\t\t\t\t\t<a href=\"/logout\">\r\n\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img src=\"{userdata.avatar}\" on:click={toggleusermenu} alt=\"avatar\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<a class=\"btn btn-primary\" href=\"/\" role=\"button\" use:link>Home</a>\r\n\t\t\t\t<a class=\"btn btn-primary\" href=\"/p/{userdata.profileId}\" role=\"button\" use:link>Profile</a>\r\n\t\t\t\t<a class=\"btn btn-primary\" href=\"/templates\" role=\"button\" use:link>Templates</a>\r\n            {/if}\r\n\t\t</div>\r\n        <Router {url}>\r\n            <Route path=\"/templates\" component={Templates} {userdata} {setTemplate} />\r\n            <Route path=\"/drip\" component={Drip} {userdata} />\r\n            <Route path=\"/settings\" component={Settings} {userdata} />\r\n            <Route path=\"/p/:profileId\" component={Profile} />\r\n            <Route path=\"*\" component={Home} {userdata} />\r\n        </Router>\r\n\t</div>\r\n</main>\r\n\r\n<style></style>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","set_current_component","get_current_component","Error","onMount","on_mount","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","replace","Date","now","replaceState","pushState","e","createHistory","Boolean","window","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","paramRe","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","combinePaths","basepath","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","levels","updates","to_null_out","accounted_for","n","routeParams","routeProps","$activeRoute","link","onClick","currentTarget","host","hostMatches","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","hasAttribute","loginUrl","profileId","drip","id","friendCode","baseUrl","valueOf","copyInput","selectedTemplate","userdata","async","fetch","json","templateList","template","templateFound","t","jQuery","on","html","current","final","cleanFriendCode","console","log","focus","select","execCommand","profile","getProfile","allbots","userId","nobot","saveFriendCode","saveUsername","saveDrip","deleteProfile","teamQuery","teamWebhook","teamWebhookAllowed","botKey","teamWebhookUrl","isAdmin","settings","saveRow","botConfig","bot","method","headers","body","JSON","stringify","saveBotKeyConfig","resetKey","resetKeyConfig","revokeKey","revokeKeyConfig","getSettings","loadFile","blockupload","uploadNewImage","files","hide","show","imageFile","reader","FileReader","onload","img","width","height","canvas","drawImage","dataurl","toDataURL","getElementById","readAsDataURL","resizedImage","dataURL","BASE64_MARKER","contentType","parts","raw","Blob","rawLength","atob","uInt8Array","Uint8Array","charCodeAt","dataURLToBlob","FormData","ajax","cache","processData","success","reload","error","alert","dripdata","getDrip","getTag","isString","isNumber","isBoolean","isObject","isObjectLike","isDefined","isBlank","trim","prototype","toString","call","hasOwn","hasOwnProperty","KeyStore","constructor","_keys","_keyMap","totalWeight","createKey","weight","keyId","toJSON","createKeyPath","createKeyId","MISSING_KEY_PROPERTY","INVALID_KEY_WEIGHT_VALUE","Config","isCaseSensitive","includeScore","shouldSort","sortFn","idx","includeMatches","findAllMatches","minMatchCharLength","threshold","distance","useExtendedSearch","getFn","list","arr","deepGet","baseToString","ignoreLocation","ignoreFieldNorm","fieldNormWeight","SPACE","FuseIndex","norm","mantissa","pow","numTokens","parseFloat","round","isCreated","setIndexRecords","setSources","docs","records","setKeys","_keysMap","doc","docIndex","_addString","_addObject","removeAt","getValueForItemAtKeyId","item","record","v","$","keyIndex","subRecords","nestedArrIndex","subRecord","createIndex","myIndex","computeScore$1","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","MAX_BITS","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","j","charMatch","charAt","isMatch","indices","matchmask","end","convertMaskToIndices","createPatternAlphabet","char","BitapSearch","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","searchIn","allIndices","totalScore","hasMatches","BaseMatch","static","getMatch","multiRegex","singleRegex","exp","matches","FuzzyMatch","super","_bitapSearch","IncludeMatch","searchers","startsWith","endsWith","searchersLen","SPACE_RE","MultiMatchSet","ExtendedSearch","query","results","queryItem","found","searcher","token","isMultiMatch","isSingleMatch","parseQuery","numMatches","qLen","pLen","registeredSearchers","createSearcher","searcherClass","condition","LogicalOperator","KeyType","isExpression","convertToExplicit","LogicalOperator_AND","parse","next","isQueryPath","isPath","isLeaf","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","operator","transformMatches","refIndex","transformScore","Fuse","_keyStore","setCollection","_docs","_myIndex","remove","predicate","getIndex","limit","_searchStringList","_searchObjectList","_searchLogical","Number","EPSILON","computeScore","transformers","transformer","format","expression","evaluate","_findMatches","res","child","resultMap","expResults","keywords","color_friendcode","color_name","fuse","setTemplate","templates","justMyTemplates","filteredTemplates","unusedSlot","clickTemplate","confirmDelete","confirm","deleteTemplate","searchTerm","URL","origin","URLSearchParams","q","searchTemplates","t1","t2","parseInt","version","parseIndex","config","args","register","avatar","Templates","Drip","Settings","Profile","Home","userData","slideToggle"],"mappings":"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"}